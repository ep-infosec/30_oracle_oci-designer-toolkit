# -- Copyright: {{ copyright }}
# ---- Author : {{ author }}

import oci
import os
import sys

STATE_AVAILABLE = 'AVAILABLE'

# Common Create Virtual Network Function
def create_virtual_cloud_network(client, compartment_id, cidr_block, dns_label='', display_name='', **kwargs):
    result = client.create_vcn(
        compartment_id=compartment_id,
        cidr_block=cidr_block,
        display_name=display_name,
        dns_label=dns_label
    )
    # Get repsonse information on completion
    response = oci.wait_until(
        client,
        client.get_vcn(result.data.id),
        'lifecycle_state',
        STATE_AVAILABLE
    )
    return response.data

def processWorkflow(args, **kwargs):
    # Default config file and profile
    config = oci.config.from_file()
    compute_client = oci.core.ComputeClient(config)
    virtual_network_client = oci.core.VirtualNetworkClient(config)
    # Execute function calls
{% for api_call in api_calls %}
    {{ api_call }}
{% endfor %}
    return



# Main function to kick off processing
if __name__ == "__main__":
    processWorkflow(sys.argv[1:])

